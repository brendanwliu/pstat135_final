library(sparklyr)
install.packages("ggplot2")
install.packages("lmerTest")
device.no <- c(1,2,3,4,5,6,7,8,9,10)
op1_1 <- c(50,52,53,49,48,52,51,52,50,47)
op1_2 <- c(49,52,50,51,49,50,51,50,51,46)
op1_3 <- c(50,51,50,50,48,50,51,49,50,49)
op2_1 <- c(50,51,54,48,48,52,51,53,51,46)
op2_2 <- c(48,51,52,50,49,50,50,48,48,47)
op2_3 <- c(51,51,51,51,48,50,50,50,49,48)
df <- data.frame("measurements" = c(op1_1, op1_2, op1_3, op2_1, op2_2, op2_3), "part" = as.factor(c(rep(device.no, 6))), "op.no" = c(rep("op1", 30),rep("op2", 30)))
xtabs(~part+op.no, data =df)
View(df)
device.no <- rep(c(1,2,3,4,5,6,7,8,9,10),6)
measurements <- c(50,52,53,49,48,52,51,52,50,47,
49,52,50,51,49,50,51,50,51,46,
50,51,50,50,48,50,51,49,50,49,
50,51,54,48,48,52,51,53,51,46,
48,51,52,50,49,50,50,48,48,47,
51,51,51,51,48,50,50,50,49,48)
op <- c(rep(1,30), rep(2,30))
df <- data.frame("measurements" = measurements, "part" = device.no, "op" = op)
xtabs(~part+op.no, data =df)
device.no <- rep(c(1,2,3,4,5,6,7,8,9,10),6)
measurements <- c(50,52,53,49,48,52,51,52,50,47,
49,52,50,51,49,50,51,50,51,46,
50,51,50,50,48,50,51,49,50,49,
50,51,54,48,48,52,51,53,51,46,
48,51,52,50,49,50,50,48,48,47,
51,51,51,51,48,50,50,50,49,48)
op <- c(rep(1,30), rep(2,30))
df <- data.frame("measurements" = measurements, "part" = device.no, "op" = op)
xtabs(~part+op, data =df)
model <- lm(measurements ~ part*op.no, data = df)
model <- lm(measurements ~ part*op, data = df)
(fixed.Aov <- anova(model))
device.no <- rep(c(1,2,3,4,5,6,7,8,9,10),6)
measurements <- c(50,52,53,49,48,52,51,52,50,47,
49,52,50,51,49,50,51,50,51,46,
50,51,50,50,48,50,51,49,50,49,
50,51,54,48,48,52,51,53,51,46,
48,51,52,50,49,50,50,48,48,47,
51,51,51,51,48,50,50,50,49,48)
op <- c(rep(1,30), rep(2,30))
df <- data.frame("measurements" = measurements, "part" = as.factor(device.no), "op" = as.factor(op))
xtabs(~part+op, data =df)
model <- lm(measurements ~ part*op, data = df)
(fixed.Aov <- anova(model))
summary(aov(measurements~ERROR(part*op)))
summary(aov(measurements~Error(part*op)))
summary(aov(measurements~Error(part*op)), data = df)
device.no <- rep(c(1,2,3,4,5,6,7,8,9,10),6)
measurements <- c(50,52,53,49,48,52,51,52,50,47,
49,52,50,51,49,50,51,50,51,46,
50,51,50,50,48,50,51,49,50,49,
50,51,54,48,48,52,51,53,51,46,
48,51,52,50,49,50,50,48,48,47,
51,51,51,51,48,50,50,50,49,48)
op <- c(rep(1,30), rep(2,30))
df <- data.frame("measurements" = measurements, "part" = as.factor(device.no), "op" = as.factor(op))
xtabs(~part+op, data =df)
model <- lm(measurements ~ part*op, data = df)
(fixed.Aov <- anova(model))
summary(aov(measurements~Error(part*op), data = df))
(summary(aov(measurements~Error(part*op), data = df)))
(summary(anova(measurements~Error(part*op), data = df)))
(summary(anova(measurements~Error(part*op), data = df)))
library(dplyr)
library(neuralnet)
library(ggplot2)
library(GGally)
setwd("/media/brendanliu/1ffe4965-0a76-4845-aedc-1929d41a1cde/pstat135_final")
NC_data <- subset(NOAA_NC_DAvg_training_data, select = -c(CLASS, MinTemp, MaxTemp, MinBP, MaxBP, MinRH, MaxRH, MinWSpd, MaxWSpd, MaxTempT, MinTempT, MaxRHT, MinRHT, MaxBPT, MinBPT, MaxWSpdT, MinWSpdT))
ggcorr(subset(NOAA_NC_DAvg_training_data, select = -c(date,Temp, CLASS,MaxTempT, MinTempT, MaxRHT, MinRHT, MaxBPT, MinBPT, MaxWSpdT, MinWSpdT)))
scale01 <- function(x){
(x - min(x)) / (max(x) - min(x))
}
NC_data_num <- subset(NC_data, select = -c(date)) %>%
mutate_all(scale01)
ggpairs(NC_data_num)
set.seed(101)
# Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(NC_data_num), size = floor(.75*nrow(NC_data_num)), replace = F)
train <- NC_data_num[sample, ]
test  <- NC_data_num[-sample, ]
NOAA_NC_DAvg_training_data <- read.csv("/media/brendanliu/1ffe4965-0a76-4845-aedc-1929d41a1cde/pstat135_final/input/clean/training_data/NOAA_NC_DAvg_training_data.csv")
View(NOAA_NC_DAvg_training_data)
library(dplyr)
library(neuralnet)
library(ggplot2)
library(GGally)
setwd("/media/brendanliu/1ffe4965-0a76-4845-aedc-1929d41a1cde/pstat135_final")
NC_data <- subset(NOAA_NC_DAvg_training_data, select = -c(CLASS, MinTemp, MaxTemp, MinBP, MaxBP, MinRH, MaxRH, MinWSpd, MaxWSpd, MaxTempT, MinTempT, MaxRHT, MinRHT, MaxBPT, MinBPT, MaxWSpdT, MinWSpdT))
ggcorr(subset(NOAA_NC_DAvg_training_data, select = -c(date,Temp, CLASS,MaxTempT, MinTempT, MaxRHT, MinRHT, MaxBPT, MinBPT, MaxWSpdT, MinWSpdT)))
scale01 <- function(x){
(x - min(x)) / (max(x) - min(x))
}
NC_data_num <- subset(NC_data, select = -c(date)) %>%
mutate_all(scale01)
ggpairs(NC_data_num)
set.seed(101)
# Set Seed so that same sample can be reproduced in future also
# Now Selecting 75% of data as sample from total 'n' rows of the data
sample <- sample.int(n = nrow(NC_data_num), size = floor(.75*nrow(NC_data_num)), replace = F)
train <- NC_data_num[sample, ]
test  <- NC_data_num[-sample, ]
set.seed(12321)
NC_NN1 <- neuralnet(Temp~.,
data = train,
hidden = c(10),
act.fct = "logistic",
rep = 10)
plot(NC_NN1, rep = 'best', fontsize = 10, information = FALSE, intercept = FALSE)
NC_NN1$result.matrix[1,]
## Training Error
NN1_Train_SSE <- (sum((NC_NN1$net.result[[1]] - train$Temp)^2)/nrow(train))^0.5
## Test Error
Test_NN1_Output <- compute(NC_NN1, test[, 0:8])$net.result
NN1_Test_RMSE <- (sum((Test_NN1_Output - test$Temp)^2/nrow(test)))^0.5
## Training Error
NN1_Train_SSE <- (sum((NC_NN1$net.result[[1]] - train$Temp)^2)/nrow(train))^0.5
## Test Error
Test_NN1_Output <- compute(NC_NN1, test[, 0:9])$net.result
NN1_Test_RMSE <- (sum((Test_NN1_Output - test$Temp)^2/nrow(test)))^0.5
plot(1:nrow(Test_NN1_Output), Test_NN1_Output)
ggplot1(data = NULL, aes(x=p:lnrow(Test_NN1_Output), y=Test_NN1_Output)) + geom_line()
ggplot(data = NULL, aes(x=p:lnrow(Test_NN1_Output), y=Test_NN1_Output)) + geom_line()
ggplot(data = NULL, aes(x=1:lnrow(Test_NN1_Output), y=Test_NN1_Output)) + geom_line()
ggplot(data = NULL, aes(x=1:nrow(Test_NN1_Output), y=Test_NN1_Output)) + geom_line()
ggplot(data = NULL) + geom_line(aes(x=1:nrow(Test_NN1_Output), y=Test_NN1_Output))
ggplot(data = NULL) + geom_line(aes(x=1:nrow(Test_NN1_Output), y=Test_NN1_Output))
ggplot(data = NULL) + geom_line(aes(x=1:nrow(Test_NN1_Output), y=Test_NN1_Output)) + geom_line(aes(x = 1:nrow(test), test$Temp))
ggplot(data = NULL) + geom_line(aes(x=1:nrow(Test_NN1_Output), y=Test_NN1_Output)) + geom_line(aes(x = 1:nrow(test), test$Temp), col = "red")
ggplot(data = NULL) + geom_line(aes(x=1:nrow(train), y=NC_NN1$net.result[[1]])) + geom_line(aes(x = 1:nrow(train), train$Temp), col = "red")
ggplot(data = NULL) + geom_line(aes(x=1:nrow(Test_NN1_Output), y=Test_NN1_Output)) + geom_line(aes(x = 1:nrow(test), test$Temp), col = "red")
set.seed(12321)
NC_NN2 <- neuralnet(Temp~.,
data = train,
hidden = c(32,5),
act.fct = "logistic",
rep = 10)
plot(NC_NN2, rep = 'best', fontsize = 10, information = FALSE, intercept = FALSE)
NC_NN2$result.matrix[1,]
## Training Error
NN2_Train_SSE <- (sum((NC_NN2$net.result[[1]] - train$Temp)^2)/nrow(train))^0.5
## Test Error
Test_NN2_Output <- compute(NC_NN2, test[, 0:9])$net.result
NN2_Test_RMSE <- (sum((Test_NN2_Output - test$Temp)^2/nrow(test)))^0.5
plot(NC_NN1, rep = 'best', fontsize = 10, information = FALSE, intercept = FALSE)
fa <- c(73,70,71,65,76)
fb <- c(75,82,82,80,86)
fc <- c(69,67,76,74,74)
fd <- c(68,77,76,73,71)
fe <- c(69,63,65,65,58)
ff <- c(80,87,86,84,78)
f_df <- data.frame("fa" = fa, "fb" = fb, "fc" = fc, "fd" = fd, "fe" = fe, "ff" = ff)
View(f_df)
fa <- c(73,70,71,65,76)
fb <- c(75,82,82,80,86)
fc <- c(69,67,76,74,74)
fd <- c(68,77,76,73,71)
fe <- c(69,63,65,65,58)
ff <- c(80,87,86,84,78)
f_df <- data.frame("amt" = c(fa,fb,fc,fd,fe,ff), "brand" = c(rep("A", 5),rep("B", 5),rep("C", 5),rep("D", 5),rep("E", 5),rep("F", 5)))
View(f_df)
f_model <- lm(amt ~ brand, data = f_df)
Anova(f_model)
f_model <- lm(amt ~ brand, data = f_df)
anova(f_model)
sample_m <- c(mean(fa), mean(fb), mean(fc), mean(fd), mean(fe), mean(ff))
f_model <- lm(amt ~ brand, data = f_df)
aov(f_model)
f_model <- lm(amt ~ brand, data = f_df)
summary(aov(f_model))
sample_m <- c(mean(fa), mean(fb), mean(fc), mean(fd), mean(fe), mean(ff))
sample_sd <- c(sd(fa), sd(fb), sd(fc), sd(fd), sd(fe), sd(ff))
sample_m <- c(mean(fa), mean(fb), mean(fc), mean(fd), mean(fe), mean(ff))
sample_sd <- c(sd(fa), sd(fb), sd(fc), sd(fd), sd(fe), sd(ff))
sample_sd
sample_m <- c(mean(fa), mean(fb), mean(fc), mean(fd), mean(fe), mean(ff))
sample_sd <- c(sd(fa), sd(fb), sd(fc), sd(fd), sd(fe), sd(ff))
ybar.. <- mean(c(fa,fb,fc,fd,fe,ff))
qf(0.05, 5, 24, lower.tail = F)
library("car")
library(car)
install.packages("car")
qqPlot(f_df$amt)
qqplot(f_df$amt)
f_lm <- lm(amt~brand, data = f_df)
f_res = rstandard(f_lm)
qqnorm(f_res,
ylab = "Standardized Residuals",
xlab = "Normal Scores",
main = "Fertilizer Effects")
qqline(f_res)
f_lm <- lm(amt~brand, data = f_df)
f_res = rstandard(f_lm)
qqnorm(f_res,
ylab = "Standardized Residuals",
xlab = "Normal Scores",
main = "Fertilizer Effects")
qqline(f_res)
f_lm <- lm(amt~brand, data = f_df)
f_res <- rstandard(f_lm)
qqnorm(f_res,
ylab = "Standardized Residuals",
xlab = "Normal Scores",
main = "Fertilizer Effects")
qqline(f_res)
f_sres <- resid(f_lm)
plot(f_df$amt, f_sres)
abline(0,0)
f_lm <- lm(amt~brand, data = f_df)
f_res <- rstandard(f_lm)
qqnorm(f_res,
ylab = "Standardized Residuals",
xlab = "Normal Scores",
main = "Fertilizer Effects")
qqline(f_res)
f_sres <- resid(f_lm)
plot(f_lm, which = c(1),
xlab = "Bushels",
ylab = "Residuals",
main = "Residual-")
f_lm <- lm(amt~brand, data = f_df)
f_res <- rstandard(f_lm)
qqnorm(f_res,
ylab = "Standardized Residuals",
xlab = "Normal Scores",
main = "Fertilizer Effects")
qqline(f_res)
f_sres <- resid(f_lm)
plot(f_lm, which = c(1))
install.packages("agricolae")
install.packages("questionr")
install.packages("klaR")
install.packages("agricolae")
